const jwt = require('jsonwebtoken');

const authenticate = (req, res, next) => {
    const authHeader = req.headers['authorization']; 
    if (!authHeader) return res.status(401).send('Access Denied');

    const token = authHeader.replace('Bearer ', ''); 
    try {
        const verified = jwt.verify(token, process.env.JWT_SECRET);
        console.log('Verifying user...');
        req.user = verified;
        console.log('User is Verified✔️✔️✔️')
        next();
    } catch (err) {
        res.status(400).send('Invalid Token');
    }
};

const authorize = (requiredPermissions) => (req, res, next) => {
    const userPermissions = req.user.permissions || [];
    const hasPermission = requiredPermissions.every((perm) => 
        userPermissions.includes(perm));

    if (!hasPermission) return res.status(403).send('Permission Denied');
    next();
};

module.exports = { authenticate, authorize };
